{"version":3,"sources":["../../client/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\nrequire('source-map-support').install();\n\nconst WebSocket = require('ws');\nconst uuid = require('uuid');\nconst Responder = require('./Responder');\nconst Response = require('./Response');\nconst logger = require('../common/Logger')('index');\n\nclass Client {\n  constructor(config) {\n    this.config = config;\n    this.secret = config.sharedSecret;\n    if (config.baseUrl) {\n      this.baseUrl = config.baseUrl;\n    } else {\n      this.baseUrl = `http${config.secure ? 's' : ''}://${config.hostname}:${config.port}`;\n    }\n  }\n\n  connect() {\n    return new Promise((resolve, reject) => {\n      this.ws = new WebSocket(this.baseUrl.replace(/^http/, 'ws'));\n      this.paths = {};\n\n      function authReject() {\n        logger.debug('Rejected: bad secret');\n        reject('Bad secret');\n      }\n\n      // authorizing\n      this.ws.on('open', () => {\n        if (typeof this.secret !== 'undefined') {\n          logger.debug('Sending secert');\n          this.ws.send(this.secret);\n        } else {\n          logger.debug('No secret defined'); // mostly for testing\n        }\n      });\n\n      this.ws.on('close', authReject);\n\n      this.ws.on('message', (rawMessage) => {\n        let parsed = null;\n        try {\n          parsed = JSON.parse(rawMessage);\n        } catch (e) {\n          return;\n        }\n\n        if (parsed.connected === true) {\n          this.ws.removeListener('close', authReject);\n          resolve(this);\n          return;\n        }\n\n        if (this.paths[parsed.path]) {\n          const tid = parsed.tid;\n          logger.debug('Received request', parsed.request);\n          this.paths[parsed.path].emit('request', parsed.request);\n          this.paths[parsed.path].emit('requestHandler', parsed.request, new Response(this, tid));\n        }\n      });\n    });\n  }\n\n  sendRes(tid, response) {\n    logger.debug('Sending response', response);\n    this.ws.send(JSON.stringify({\n      tid,\n      response,\n    }));\n  }\n\n  disconnect() {\n    logger.debug('Client closed');\n    this.ws.close();\n  }\n\n  createListener(path, requestHandler) {\n    let handler = undefined;\n    let realPath = undefined;\n    if (typeof path === 'function' && typeof requestHandler === 'undefined') {\n      handler = path;\n    } else {\n      handler = requestHandler;\n      realPath = path;\n    }\n\n    const msg = { action: 'createCallbackUrl' };\n    if (typeof realPath !== 'undefined') {\n      msg.path = realPath;\n    }\n    return this.sendRecv(msg)\n      .then((message) => {\n        logger.debug(`Received callback url ${message.path}`);\n        const responder = new Responder(this, message.path);\n        this.paths[message.path] = responder;\n        if (typeof handler === 'function') {\n          responder.handler = handler;\n        }\n        responder.on('requestHandler', (req, res) => {\n          responder.handler(req, res);\n        });\n        return responder;\n      });\n  }\n\n  sendRecv(msg) {\n    const tid = uuid.v4();\n    const message = msg;\n    message.tid = tid;\n\n    return new Promise((resolve, reject) => {\n      let timeout = null;\n\n      const listener = (rawMessage) => {\n        let parsed = null;\n        try {\n          parsed = JSON.parse(rawMessage);\n        } catch (e) {\n          return;\n        }\n\n        if (parsed.tid !== tid) {\n          return;\n        }\n\n        this.ws.removeListener('message', listener);\n        clearTimeout(timeout);\n\n        if (message.error) {\n          logger.debug('Received error', parsed);\n          reject(parsed);\n          return;\n        }\n\n        logger.debug('Received message', parsed);\n        resolve(parsed);\n      };\n\n      timeout = setTimeout(() => {\n        this.ws.removeListener('message', listener);\n        reject(new Error('timed out'));\n      }, 2000);\n\n      this.ws.on('message', listener);\n\n      logger.debug('Sending message', message);\n      this.ws.send(JSON.stringify(message));\n    });\n  }\n}\n\nmodule.exports = Client;\n"]}