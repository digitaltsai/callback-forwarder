{"version":3,"sources":["../../server/CallbackClient.js"],"names":[],"mappings":"AAAA;;;;;;AAEA,IAAM,OAAO,QAAQ,MAAR,CAAb;;AAEA,IAAM,SAAS,QAAQ,kBAAR,EAA4B,gBAA5B,CAAf;;IAEM,c;AACJ,0BAAY,cAAZ,EAA4B,EAA5B,EAAgC;AAAA;;AAAA;;AAC9B,SAAK,cAAL,GAAsB,cAAtB;AACA,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,EAAL,GAAU,KAAK,EAAL,EAAV;AACA,SAAK,KAAL,GAAa,EAAb;;AAEA,SAAK,EAAL,CAAQ,EAAR,CAAW,SAAX,EAAsB,UAAC,OAAD,EAAa;AACjC,YAAK,YAAL,CAAkB,OAAlB;AACD,KAFD;AAGD;;;;iCAEY,O,EAAS;AAAA;;AACpB,UAAI,eAAJ;AACA,UAAI;AACF,iBAAS,KAAK,KAAL,CAAW,OAAX,CAAT;AACD,OAFD,CAEE,OAAO,CAAP,EAAU;AACV,eAAO,KAAP,CAAa,CAAb;AACA,aAAK,SAAL,CAAe,CAAf;AACA;AACD;;AAED,aAAO,KAAP,CAAa,mBAAb,EAAkC,OAAlC;;AAEA,UAAI,CAAC,OAAO,GAAZ,EAAiB;AACf,aAAK,SAAL,CAAe,IAAI,KAAJ,CAAU,mBAAV,CAAf;AACD;;AAED,cAAQ,OAAO,MAAf;AACE,aAAK,mBAAL;AAA0B;;AAExB,iBAAK,iBAAL,CAAuB,OAAO,IAA9B,EACG,IADH,CACQ,UAAC,QAAD,EAAc;AAClB,qBAAO,KAAP,2BAAqC,QAArC;AACA,qBAAK,EAAL,CAAQ,IAAR,CAAa,KAAK,SAAL,CAAe;AAC1B,qBAAK,OAAO,GADc;AAE1B,sBAAM;AAFoB,eAAf,CAAb;AAID,aAPH,EAQG,KARH,CAQS,UAAC,GAAD,EAAS;AACd,qBAAK,EAAL,CAAQ,IAAR,CAAa,KAAK,SAAL,CAAe;AAC1B,qBAAK,OAAO,GADc;AAE1B,uBAAO,IAAI;AAFe,eAAf,CAAb;AAID,aAbH;AAcA;AACD;AACD;AAAS;AACP,iBAAK,EAAL,CAAQ,IAAR,CAAa,KAAK,SAAL,CAAe;AAC1B,qBAAO;AADmB,aAAf,CAAb;AAGA;AACD;AAxBH;AA0BD;;;sCAEiB,S,EAAW;AAAA;;AAC3B,UAAI,CAAC,SAAD,IAAc,UAAU,CAAV,MAAiB,GAAnC,EAAwC;AACtC,gBAAQ,MAAR,CAAe,cAAf;AACD;;AAED,UAAM,OAAO,mBAAiB,KAAK,EAAtB,SAA4B,KAAK,EAAL,EAAzC;AACA,aAAO,KAAK,cAAL,CAAoB,iBAApB,CAAsC,IAAtC,EAA4C,IAA5C,EACJ,IADI,CACC,YAAM;AACV,eAAK,KAAL,CAAW,IAAX,IAAmB,IAAnB;AACA,eAAO,IAAP;AACD,OAJI,CAAP;AAKD;;;sCAEiB,I,EAAM;AACtB,aAAO,KAAK,KAAL,CAAW,IAAX,CAAP;AACA,WAAK,cAAL,CAAoB,gBAApB,CAAqC,IAArC;AACD;;;;;;yCAGoB,I,EAAM,O,EAAS;AAAA;;AAClC,UAAM,MAAM,KAAK,EAAL,EAAZ;AACA,aAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACtC,YAAI,UAAU,IAAd;;AAEA,YAAM,eAAe,SAAf,YAAe,CAAC,UAAD,EAAgB;AACnC,cAAI,UAAU,IAAd;AACA,cAAI;AACF,sBAAU,KAAK,KAAL,CAAW,UAAX,CAAV;AACD,WAFD,CAEE,OAAO,CAAP,EAAU;AACV,mBAAO,KAAP,CAAa,CAAb;AACA;AACD;;AAED,cAAI,QAAQ,GAAR,KAAgB,GAApB,EAAyB;AACvB;AACD;AACD,iBAAO,KAAP,CAAa,0BAAb;AACA,iBAAK,EAAL,CAAQ,cAAR,CAAuB,SAAvB,EAAkC,YAAlC;AACA,uBAAa,OAAb;AACA,kBAAQ,QAAQ,QAAhB;AACD,SAhBD;;AAkBA,kBAAU,WAAW,YAAM;AACzB,iBAAO,IAAI,KAAJ,CAAU,kCAAV,CAAP;AACA,iBAAK,EAAL,CAAQ,cAAR,CAAuB,SAAvB,EAAkC,YAAlC;AACD,SAHS,EAGP,IAHO,CAAV;;AAKA,eAAK,EAAL,CAAQ,EAAR,CAAW,SAAX,EAAsB,YAAtB;;AAEA,eAAK,EAAL,CAAQ,IAAR,CAAa,KAAK,SAAL,CAAe;AAC1B,kBAD0B;AAE1B,oBAF0B;AAG1B;AAH0B,SAAf,CAAb;AAKD,OAjCM,CAAP;AAkCD;;;;;;AAGH,OAAO,OAAP,GAAiB,cAAjB","file":"CallbackClient.js","sourcesContent":["'use strict';\n\nconst uuid = require('uuid');\n\nconst logger = require('../common/Logger')('CallbackClient');\n\nclass CallbackClient {\n  constructor(callbackServer, ws) {\n    this.callbackServer = callbackServer;\n    this.ws = ws;\n    this.id = uuid.v4();\n    this.paths = {};\n\n    this.ws.on('message', (message) => {\n      this.parseMessage(message);\n    });\n  }\n\n  parseMessage(message) {\n    let parsed;\n    try {\n      parsed = JSON.parse(message);\n    } catch (e) {\n      logger.error(e);\n      this.sendError(e);\n      return;\n    }\n\n    logger.debug('Received message:', message);\n\n    if (!parsed.tid) {\n      this.sendError(new Error('No transaction ID'));\n    }\n\n    switch (parsed.action) {\n      case 'createCallbackUrl': {\n        // tell the server to forward a new url\n        this.createCallbackUrl(parsed.path)\n          .then((fullPath) => {\n            logger.debug(`Sending callback url ${fullPath}`);\n            this.ws.send(JSON.stringify({\n              tid: parsed.tid,\n              path: fullPath,\n            }));\n          })\n          .catch((err) => {\n            this.ws.send(JSON.stringify({\n              tid: parsed.tid,\n              error: err.message,\n            }));\n          });\n        break;\n      }\n      default: {\n        this.ws.send(JSON.stringify({\n          error: 'Invalid action specified',\n        }));\n        break;\n      }\n    }\n  }\n\n  createCallbackUrl(pathInput) {\n    if (!pathInput || pathInput[0] !== '/') {\n      Promise.reject('Invalid path');\n    }\n\n    const path = pathInput || `/${this.id}/${uuid.v4()}`;\n    return this.callbackServer.createCallbackUrl(path, this)\n      .then(() => {\n        this.paths[path] = true;\n        return path;\n      });\n  }\n\n  deleteCallbackUrl(path) {\n    delete this.paths[path];\n    this.callbackServer.deleteCalbackUrl(path);\n  }\n\n  // this will just ask the client for a response\n  askClientForResponse(path, request) {\n    const tid = uuid.v4();\n    return new Promise((resolve, reject) => {\n      let timeout = null;\n\n      const pathListener = (rawMessage) => {\n        let message = null;\n        try {\n          message = JSON.parse(rawMessage);\n        } catch (e) {\n          logger.error(e);\n          return;\n        }\n\n        if (message.tid !== tid) {\n          return;\n        }\n        logger.debug('Received relayed message');\n        this.ws.removeListener('message', pathListener);\n        clearTimeout(timeout);\n        resolve(message.response);\n      };\n\n      timeout = setTimeout(() => {\n        reject(new Error('Did not receive response in time'));\n        this.ws.removeListener('message', pathListener);\n      }, 5000);\n\n      this.ws.on('message', pathListener);\n\n      this.ws.send(JSON.stringify({\n        tid,\n        path,\n        request,\n      }));\n    });\n  }\n}\n\nmodule.exports = CallbackClient;\n"]}